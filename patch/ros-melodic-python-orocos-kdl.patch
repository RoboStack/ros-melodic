diff --git a/PyKDL/dynamics.sip b/PyKDL/dynamics.sip
index e0096dd..36f833c 100644
--- a/PyKDL/dynamics.sip
+++ b/PyKDL/dynamics.sip
@@ -72,4 +72,7 @@ public:
     int JntToCoriolis(const JntArray &q, const JntArray &q_dot, JntArray &coriolis);
 	int JntToMass(const JntArray &q, JntSpaceInertiaMatrix& H);
 	int JntToGravity(const JntArray &q,JntArray &gravity);
+
+private:
+    ChainDynParam& operator=(const ChainDynParam&);
 };
diff --git a/PyKDL/kinfam.sip b/PyKDL/kinfam.sip
index d87fd00..c9278b0 100644
--- a/PyKDL/kinfam.sip
+++ b/PyKDL/kinfam.sip
@@ -321,6 +321,8 @@ class ChainFkSolverPos : SolverI
 using namespace KDL;
 %End
     virtual int JntToCart(const JntArray& q_in, Frame& p_out,int segmentNr=-1)=0;
+private:
+    ChainFkSolverPos& operator=(const ChainFkSolverPos&);
 };
 
 class ChainFkSolverVel : SolverI
@@ -331,6 +333,8 @@ using namespace KDL;
 %End
     virtual int JntToCart(const JntArrayVel& q_in, FrameVel& p_out,int
     segmentNr=-1)=0;
+private:
+    ChainFkSolverVel& operator=(const ChainFkSolverVel&);
 };
 
 class ChainFkSolverPos_recursive : ChainFkSolverPos
@@ -344,6 +348,8 @@ public:
     ChainFkSolverPos_recursive(const Chain& chain);
     virtual int JntToCart(const JntArray& q_in, Frame& p_out,int segmentNr=-1);
     virtual void updateInternalDataStructures();
+private:
+    ChainFkSolverPos_recursive& operator=(const ChainFkSolverPos_recursive&);
 };
 
 class ChainFkSolverVel_recursive : ChainFkSolverVel
@@ -357,6 +363,8 @@ public:
     virtual int JntToCart(const JntArrayVel& q_in ,FrameVel& out,int
     segmentNr=-1 );
     virtual void updateInternalDataStructures();
+private:
+    ChainFkSolverVel_recursive& operator=(const ChainFkSolverVel_recursive&);
 };
 
 class ChainIkSolverPos : SolverI {
@@ -378,6 +386,9 @@ public:
     virtual int CartToJnt(const JntArray& q_in , const Twist& v_in , JntArray& qdot_out )=0;
     virtual int CartToJnt(const JntArray& q_init , const FrameVel& v_in , JntArrayVel& q_out )=0;
     virtual void updateInternalDataStructures()=0;
+
+private:
+    ChainIkSolverVel& operator=(const ChainIkSolverVel&);
 };
 
 class ChainIkSolverPos_NR : ChainIkSolverPos
@@ -392,6 +403,8 @@ public:
     
     virtual int CartToJnt(const JntArray& q_init , const Frame& p_in ,JntArray& q_out);
     virtual void updateInternalDataStructures();
+private:
+    ChainIkSolverPos_NR& operator=(const ChainIkSolverPos_NR&);
 };
 
 class ChainIkSolverPos_NR_JL : ChainIkSolverPos
@@ -407,6 +420,9 @@ public:
     
     virtual int CartToJnt(const JntArray& q_init , const Frame& p_in ,JntArray& q_out);
     virtual void updateInternalDataStructures();
+
+private:
+    ChainIkSolverPos_NR_JL& operator=(const ChainIkSolverPos_NR_JL&);
 };
 
 class ChainIkSolverVel_pinv : ChainIkSolverVel
@@ -420,6 +436,9 @@ public:
         
     virtual int CartToJnt(const JntArray& q_in, const Twist& v_in, JntArray& qdot_out);
     virtual void updateInternalDataStructures();
+
+private:
+    ChainIkSolverVel_pinv& operator=(const ChainIkSolverVel_pinv&);
 };
 
 class ChainIkSolverVel_wdls : ChainIkSolverVel
@@ -428,6 +447,10 @@ class ChainIkSolverVel_wdls : ChainIkSolverVel
 #include <kdl/chainiksolvervel_wdls.hpp>
 using namespace KDL;
 %End
+ 
+private:
+    ChainIkSolverVel_wdls& operator=(const ChainIkSolverVel_wdls&);
+
 public:
     ChainIkSolverVel_wdls(const Chain& chain,double eps=0.00001,int maxiter=150);
         
@@ -520,6 +543,9 @@ public:
 
     virtual int CartToJnt(const JntArray& q_init , const Frame& p_in ,JntArray& q_out);
     virtual void updateInternalDataStructures();
+
+private:
+    ChainIkSolverPos_LMA& operator=(const ChainIkSolverPos_LMA&);
 };
 
 
@@ -546,6 +572,9 @@ public:
     const JntArray& getOptPos()const /Factory/;
 
     const double& getAlpha()const /Factory/;
+private:
+    ChainIkSolverVel_pinv_nso& operator=(const ChainIkSolverVel_pinv_nso&);
+
 };
 
 class ChainIkSolverVel_pinv_givens : ChainIkSolverVel
@@ -559,6 +588,9 @@ public:
         
     virtual int CartToJnt(const JntArray& q_in, const Twist& v_in, JntArray& qdot_out);
     virtual void updateInternalDataStructures();
+
+private:
+    ChainIkSolverVel_pinv_givens& operator=(const ChainIkSolverVel_pinv_givens&);
 };
 
 class ChainJntToJacSolver : SolverI
@@ -571,4 +603,7 @@ public:
     ChainJntToJacSolver(const Chain& chain);
     int JntToJac(const JntArray& q_in,Jacobian& jac);
     virtual void updateInternalDataStructures();
+
+private:
+    ChainJntToJacSolver& operator=(const ChainJntToJacSolver&);
 };
