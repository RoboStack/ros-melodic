diff --git a/include/costmap_converter/costmap_to_dynamic_obstacles/multitarget_tracker/Kalman.h b/include/costmap_converter/costmap_to_dynamic_obstacles/multitarget_tracker/Kalman.h
index 4440612..34a5319 100644
--- a/include/costmap_converter/costmap_to_dynamic_obstacles/multitarget_tracker/Kalman.h
+++ b/include/costmap_converter/costmap_to_dynamic_obstacles/multitarget_tracker/Kalman.h
@@ -3,7 +3,7 @@
 
 #pragma once
 #include "defines.h"
-#include <opencv/cv.h>
+#include <opencv2/opencv.hpp>
 
 // http://www.morethantechnical.com/2011/06/17/simple-kalman-filter-for-tracking-using-opencv-2-2-w-code/
 class TKalmanFilter
diff --git a/src/costmap_to_dynamic_obstacles/blob_detector.cpp b/src/costmap_to_dynamic_obstacles/blob_detector.cpp
index 50e428d..c7352f4 100644
--- a/src/costmap_to_dynamic_obstacles/blob_detector.cpp
+++ b/src/costmap_to_dynamic_obstacles/blob_detector.cpp
@@ -18,7 +18,7 @@ void BlobDetector::detect(const cv::Mat& image, std::vector<cv::KeyPoint>& keypo
   keypoints.clear();
   cv::Mat grayscale_image;
   if (image.channels() == 3)
-    cv::cvtColor(image, grayscale_image, CV_BGR2GRAY);
+    cv::cvtColor(image, grayscale_image, cv::COLOR_BGR2GRAY);
   else
     grayscale_image = image;
 
@@ -99,7 +99,7 @@ void BlobDetector::findBlobs(const cv::Mat& image, const cv::Mat& binary_image,
 
   std::vector<std::vector<cv::Point>> contours;
   cv::Mat tmp_binary_image = binary_image.clone();
-  cv::findContours(tmp_binary_image, contours, CV_RETR_LIST, CV_CHAIN_APPROX_SIMPLE);
+  cv::findContours(tmp_binary_image, contours, cv::RETR_LIST, cv::CHAIN_APPROX_SIMPLE);
 
   for (std::size_t contour_idx = 0; contour_idx < contours.size(); ++contour_idx)
   {
