diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0d5754fdf..a379b8a45 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,7 +3,7 @@ project(tf2)
 
 find_package(console_bridge REQUIRED)
 find_package(catkin REQUIRED COMPONENTS geometry_msgs rostime tf2_msgs)
-find_package(Boost REQUIRED COMPONENTS signals system thread)
+find_package(Boost REQUIRED COMPONENTS system thread)
 
 catkin_package(
    INCLUDE_DIRS include
@@ -24,7 +24,7 @@ add_dependencies(tf2 ${catkin_EXPORTED_TARGETS})
 install(TARGETS tf2
   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
-  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
+  RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION}
 )
 
 install(DIRECTORY include/${PROJECT_NAME}/
diff --git a/include/tf2/LinearMath/Matrix3x3.h b/include/tf2/LinearMath/Matrix3x3.h
index eb96bb7d1..5fffb7b99 100644
--- a/include/tf2/LinearMath/Matrix3x3.h
+++ b/include/tf2/LinearMath/Matrix3x3.h
@@ -19,6 +19,8 @@ subject to the following restrictions:
 #include "Vector3.h"
 #include "Quaternion.h"
 
+#include <ros/macros.h>
+
 namespace tf2
 {
 
@@ -163,7 +165,7 @@ public:
 	*  @param pitch Pitch about Y axis
 	*  @param roll Roll about X axis 
 	*/
-	void setEulerZYX(const tf2Scalar& yaw, const tf2Scalar& pitch, const tf2Scalar& roll) __attribute__((deprecated))
+	ROS_DEPRECATED void setEulerZYX(const tf2Scalar& yaw, const tf2Scalar& pitch, const tf2Scalar& roll)
 	{
 		setEulerYPR(yaw, pitch, roll);
 	}
@@ -279,7 +281,7 @@ public:
 	* @param pitch Pitch around Y axis
 	* @param roll around X axis 
  	* @param solution_number Which solution of two possible solutions ( 1 or 2) are possible values*/	
-	__attribute__((deprecated)) void getEulerZYX(tf2Scalar& yaw, tf2Scalar& pitch, tf2Scalar& roll, unsigned int solution_number = 1) const
+	ROS_DEPRECATED void getEulerZYX(tf2Scalar& yaw, tf2Scalar& pitch, tf2Scalar& roll, unsigned int solution_number = 1) const
 	{
 		getEulerYPR(yaw, pitch, roll, solution_number);
 	};
diff --git a/include/tf2/LinearMath/Quaternion.h b/include/tf2/LinearMath/Quaternion.h
index 2852595be..7e14584b8 100644
--- a/include/tf2/LinearMath/Quaternion.h
+++ b/include/tf2/LinearMath/Quaternion.h
@@ -21,6 +21,8 @@ subject to the following restrictions:
 #include "Vector3.h"
 #include "QuadWord.h"
 
+#include <ros/macros.h>
+
 namespace tf2
 {
 
@@ -47,7 +49,7 @@ public:
    * @param yaw Angle around Y unless TF2_EULER_DEFAULT_ZYX defined then Z
    * @param pitch Angle around X unless TF2_EULER_DEFAULT_ZYX defined then Y
    * @param roll Angle around Z unless TF2_EULER_DEFAULT_ZYX defined then X */
-  Quaternion(const tf2Scalar& yaw, const tf2Scalar& pitch, const tf2Scalar& roll) __attribute__((deprecated))
+  ROS_DEPRECATED Quaternion(const tf2Scalar& yaw, const tf2Scalar& pitch, const tf2Scalar& roll)
 	{ 
 #ifndef TF2_EULER_DEFAULT_ZYX
 		setEuler(yaw, pitch, roll); 
@@ -110,7 +112,7 @@ public:
    * @param yaw Angle around Z
    * @param pitch Angle around Y
    * @param roll Angle around X */
-  void setEulerZYX(const tf2Scalar& yaw, const tf2Scalar& pitch, const tf2Scalar& roll) __attribute__((deprecated))
+  ROS_DEPRECATED void setEulerZYX(const tf2Scalar& yaw, const tf2Scalar& pitch, const tf2Scalar& roll)
 	{
           setRPY(roll, pitch, yaw);
 	}
